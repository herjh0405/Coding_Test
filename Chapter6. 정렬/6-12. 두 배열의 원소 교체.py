# 동빈이는 두 개의 배열 A와 B를 가지고 있다. 두 배열은 N개의 원소로 구성되어 있으며, 배열의 원소는 모두 자연수이다.
# 동빈이는 최대 K번의 바꿔치기 연산을 수행할 수 있는데, 바꿔치기 연산이란 배열 A에 있는 원소 하나와 배열 B에 있는
# 원소 하나를 골라서 두 원소를 서로 바꾸는 것을 말한다. 동빈이의 최종 목표는 배열 A의 모든 원소의 합이 최대가 되는 것이다.

# N, K, 그리고 배열 A와 B의 정보가 주어졌을 때, 최대 K번의 바꿔치기 연산을 수행하여 만들 수 있는 배열 A의 모든 원소의 합의
# 최댓값을 출력하는 프로그램을 작성하시오.

# 첫 번째 줄에 N, K가 공백으로 구분되어 입력된다. (1<=N<=100,000, 0<=k<=N)
n, k = map(int, input().split()) # N과 K를 입력받기
A = list(map(int, input().split())) # 배열 A의 모든 원소를 입력받기
B = list(map(int, input().split())) # 배열 B의 모든 원소를 입력받기

A = sorted(A) # 배열 A는 오름차순 정렬 수행
B = sorted(B, reverse=True) # 배열 B는 내림차순 정렬 수행

# 첫 번째 인덱스부터 확인하며, 두 배열의 원소를 최대 K번 비교
for i in range(k):
    # A의 원소가 B의 원소보다 작은 경우
    if A[i] < B[i] :
        # 두 원소를 교체
        A[i], B[i] = B[i], A[i]
    else : # A의 원소가 B의 원소보다 크거나 같을 때, 반복문을 탈출
        break

print(sum(A)) # 배열 A의 모든 원소의 합을 출력
