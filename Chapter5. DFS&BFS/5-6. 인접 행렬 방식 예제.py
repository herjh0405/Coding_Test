# 스택/큐/재귀를 배웠으니 이제 DFS/BFS를 배우자
# DFS : Depth-First Search, 깊이 우선 탐색이라고도 부르며, 그래프에서 깊은 부분을 우선적으로 탐색하는 알고리즘이다.
# DFS를 설명하기 전에 그래프의 기본 구조를 알아야 한다.
# 그래프는 노드(Node)와 간선(Edge)으로 표현되며 이때 노드를 정점(Vertex)라고도 한다.
# 그래프 탐색이란 하나의 노드를 시작으로 다수의 노드를 방문하는 것을 말한다.
# 두 노드가 간선으로 연결되어 있다면 '두 노드는 인접하다'라고 표현한다.
# 그래프는 크게 2가지 방식으로 표현할 수 있다.
# 인접 행렬(Adjacency Matrix) : 2차원 배열로 그래프의 연결 관계를 표현하는 방식 - 연결되어 있지 않은 노드끼리는 무한의 비용이라고 작성
# 인접 리스트(Adjacency List) : 리스트로 그래프의 연결 관계를 표현하는 방식

INF = 999999999 # 무한의 비용 선언

# 2차원 리스트를 이용해 인접 행렬 표현
graph = [
    [0, 7, 5],
    [7, 0, INF],
    [5, INF, 0]
]

print(graph) # [[0, 7, 5], [7, 0, 999999999], [5, 999999999, 0]]