# 개미 전사는 부족한 식량을 충당하고자 메뚜기 마을의 식량창고를 몰래 공격하려고 한다.
# 메뚜기 마을에는 여러 개의 식량창고가 있는데 식량창고는 일직선으로 이어져 있다.
# 각 식량창고에는 정해진 수의 식량을 저장하고 있으며 개미 전사는 식량창고를 선택적으로 약탈하여 식량을 빼앗을 예정이다.
# 이때 메뚜기 정찰병들은 일직선상에 존재하는 식량창고 중에서 서로 인접한 식량창고가 공격받으면 바로 알아챌 수 있다.
# 따라서 개미 전사가 정찰병에게 들키지 않고 식량창고를 약탈하기 위해서는 최소한 한 칸 이상 떨어진 식량창고를 약탈해야 한다.

# 개미 전사를 위해 식량 창고 N개에 대한 정보가 주어졌을 때 얻을 수 있는 식량의 최댓값을 구하는 프로그램을 작성하시오.
# 입력조건
# 1. 첫째 줄에 식량창고의 개수 N이 주어진다.(3<=N<=100)
# 2. 둘째 줄에 공백으로 구분되어 각 식량창고에 저장된 식량의 개수 K가 주어진다.(0<=k<=1000)
import sys
# 정수 N을 입력받기
n = int(input())
# 모든 식량 정보 입력받기
fd = list(map(int, sys.stdin.readline().split()))

# 점화식 Ai = max(Ai-1, Ai-2+ki)
# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화
d = [0] * n

# 다이나믹 프로그래밍 진행(바텀업)
d[0] = fd[0]
d[1] = max(fd[0], fd[1])
for i in range(2, n) : 
     d[i] = max(d[i-1], d[i-2]+fd[i])

# 계산된 결과 출력
print(d[n-1])