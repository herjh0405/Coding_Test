# 한 번 계산된 결과를 메모이제이션(Memoization)하기 위한 리스트 초기화
d = [0] * 100

# 피보나치 함수를 재귀함수로 구현(탑다운 다이나믹 프로그래밍)
def fibo(x) : 
     # 종료 조건(1 혹은 2일 때 1을 반환)
     if x == 1 or x == 2 :
          return 1
     # 이미 계산한 적 있는 문제라면 그대로 반환
     if d[x] != 0 : 
          return d[x]
     # 아직 계산하지 않은 문제라면 점화식에 따라서 피보나치 결과 반환
     d[x] = fibo(x-1) + fibo(x-2)
     
     return d[x]

print(fibo(99)) # 218922995834555169026

# 재귀 함수를 사용하면 컴퓨터 시스템에서는 함수를 다시 호출했을 때 메모리 상에 적재되는 
# 일련의 과정을 따라야 하므로 오버헤드가 발생할 수 있다
# 따라서 재귀 함수 대신에 반복문을 사용하여 오버헤드를 줄일 수 있다.
# 일반적으로 다이나믹 프로그래밍에는 반복문을 이용한 것이 성능이 더 좋다.
